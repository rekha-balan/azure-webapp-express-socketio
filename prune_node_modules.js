'use strict';

// Prune unnecesssary files in the node_modules/ directory.
// Chris Joakim, 2018/11/25

const fs   = require("fs");
const os   = require("os");
const util = require('util');

class Main {

    constructor() {
        this.delete_types = [];
        this.delete_types.push('.d.ts');   
        this.delete_types.push('.md'); 
        this.delete_types.push('.txt'); 
        this.delete_types.push('.npmignore'); 
        this.delete_types.push('LICENSE'); 
        this.delete_types.push('license'); 
        this.delete_types.push('Makefile'); 
        this.delete_types.push('CNAME'); 
        this.delete_types.push('.eslintrc');
        this.delete_types.push('.coffee');  
        this.delete_types.push('travis.yml');   
        this.delete_types.push('.xml'); 
        this.delete_types.push('.html'); 
        this.delete_types.push('.pug');
        this.delete_types.push('.jshintrc');
        this.delete_types.push('.json');    
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push('');  
        // this.delete_types.push('');   
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 

        this.delete_count = 0;
        this.keep_count = 0;

        // this.delete_types.push('');  
        // this.delete_types.push('');   
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push('');  
        // this.delete_types.push('');   
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
        // this.delete_types.push(''); 
    }

    execute() {
        var infile = 'node_modules_files.txt';
        var lines = fs.readFileSync(infile, 'utf-8').split('\n');
        var cwd = process.cwd();
        console.log('lines read: ' + lines.length);

        for (var i = 0; i < lines.length; i++) {
            var line = lines[i].trim();
            var remove = this.should_delete(line);
            if (this.should_delete(line)) {
                console.log('delete: ' + line);
                this.delete_count = this.delete_count + 1;
                var f = cwd + '/' + line.substr(2);
                console.log(f);
                try {
                    fs.unlinkSync(f);
                }
                catch (err) {
                    // ignore
                }
            }
            else {
                console.log('keep:   ' + line);
                this.keep_count = this.keep_count + 1;
            }
        }

        console.log('lines read:   ' + lines.length);
        console.log('delete_count: ' + this.delete_count);
        console.log('keep_count:   ' + this.keep_count);

        console.log(this.delete_types);
    }

    should_delete(line) {

        if (line === 'package.json') {
            return false;
        }
        if (line === 'package-lock.json') {
            return false;
        }

        if (line.includes('/test/')) {
            return true;
        }
        if (line.includes('/tests/')) {
            return true;
        }
        if (line.includes('/tmp/')) {
            return true;
        }


        // if (line.includes('/azure-asm-hdinsight/')) {
        //     return true;
        // }

        for (var i = 0; i < this.delete_types.length; i++) {
            var t = this.delete_types[i];
            var T = t.toUpperCase();
            if (line.endsWith(t)) {
                return true;
            }
            if (line.endsWith(T)) {
                return true;
            }
        }
        return false;
    }

}

new Main().execute();

// node prune_node_modules.js
